{"version":3,"sources":["component/Menu/Menu.js","component/Tabs/Tabs.js","component/Planet/Planet.js","component/Homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","useState","toggleMenu","setToggleMenu","links","datas","map","data","onClick","className","name","to","xmlns","width","height","fill","fillRule","d","Tabs","id","visibleTab","setVisibleTab","Button","styled","li","color","listTitles","item","style","title","subtitle","listContent","display","content","href","source","target","rel","opacity","imgContent","src","image","alt","geologyDetail","Planet","useParams","planet","find","additonalInformations","overview","images","structure","internal","geology","rotation","revolution","radius","temperature","Homepage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63829ec5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Menu.css\";\n\nconst Menu = (props) => {\n  const [toggleMenu, setToggleMenu] = useState(false);\n\n  const links = props.datas.map((data) => (\n    <NavLink\n      onClick={() => setToggleMenu(!toggleMenu)}\n      className={data.name}\n      to={\"/planets-fact-site/\" + data.name}\n      key={data.name}\n    >\n      {data.name}\n    </NavLink>\n  ));\n  return (\n    <header className={toggleMenu ? \"Menu menu-visible\" : \" Menu menu-hidden\"}>\n      <h2 className=\"title\">\n        The planets\n        <span className=\"logo-svg\" onClick={() => setToggleMenu(!toggleMenu)}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"17\">\n            <g fill=\"#FFF\" fillRule=\"evenodd\">\n              <path d=\"M0 0h24v3H0zM0 7h24v3H0zM0 14h24v3H0z\" />\n            </g>\n          </svg>\n        </span>\n      </h2>\n      <nav className={toggleMenu ? \"items menu-visible\" : \" items menu-hidden\"}>\n        {links}\n      </nav>\n    </header>\n  );\n};\n\nexport default Menu;\n","import React, { useState } from \"react\";\nimport \"./Tabs.css\";\nimport styled from \"styled-components\";\n\nconst Tabs = (props) => {\n  const [visibleTab, setVisibleTab] = useState(props.data[0].id);\n\n  const Button = styled.li`\n    height: 48px;\n    width: 100%;\n    border: 1px #393950 solid;\n    display: flex;\n    align-items: center;\n    padding-left: 28px;\n    cursor: pointer;\n    background: transparent;\n    transition: background 0.5s ease;\n\n    &:hover {\n      background: ${props.color};\n      transition: background 0.5s ease;\n    }\n\n    &.tab-title--active {\n      background: ${props.color};\n\n      @media screen and (max-width: 750px) {\n        background: transparent;\n        position relative\n      }\n\n      &.tab-title--active:after {\n        @media screen and (max-width: 750px) {\n            content: \"\";\n            background: ${props.color};\n            position absolute;\n            width: 100%;\n            height: 3px;\n            bottom: 0;\n        }\n      }\n    }\n\n    @media screen and (max-width: 750px) {\n      border: none;\n      border-bottom: 1px #393950 solid;\n      padding: 0;\n    }\n  `;\n\n  const listTitles = props.data.map((item) => (\n    <Button\n      key={item.id}\n      onClick={() => setVisibleTab(item.id)}\n      className={visibleTab === item.id ? \"title tab-title--active\" : \"title\"}\n      style={{}}\n    >\n      <p>\n        <span>{item.id}</span>\n        <span>\n          {item.title} <span className=\"subtitle\">&nbsp;{item.subtitle}</span>\n        </span>\n      </p>\n    </Button>\n  ));\n\n  const listContent = props.data.map((item) => (\n    <div\n      className=\"container\"\n      key={item.id}\n      style={visibleTab === item.id ? {} : { display: \"none\" }}\n    >\n      <p>{item.content}</p>\n      <div>\n        <span>Source : </span>\n        <a href={item.source} target=\"_blank\" rel=\"noreferrer\">\n          <span>Wikipedia</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\">\n            <path\n              fill=\"#FFF\"\n              d=\"M11.34.66C10.9.22 10.37 0 9.75 0h-7.5C1.63 0 1.1.22.66.66.22 1.1 0 1.63 0 2.25v7.5c0 .62.22 1.15.66 1.59.44.44.97.66 1.59.66h7.5c.62 0 1.15-.22 1.59-.66.44-.44.66-.97.66-1.59v-7.5c0-.62-.22-1.15-.66-1.59zM10 6.25a.467.467 0 01-.305.46.544.544 0 01-.195.04.465.465 0 01-.352-.149L8.023 5.476 3.852 9.648a.481.481 0 01-.352.149.48.48 0 01-.352-.149l-.796-.797a.48.48 0 01-.149-.351.48.48 0 01.149-.352l4.172-4.172-1.125-1.125c-.162-.15-.198-.333-.11-.546A.467.467 0 015.75 2H9.5c.135 0 .253.05.352.148A.48.48 0 0110 2.5v3.75z\"\n              opacity=\".5\"\n            />\n          </svg>\n        </a>\n      </div>\n    </div>\n  ));\n\n  const imgContent = props.data.map((item) => (\n    <div\n      className=\"img\"\n      key={item.id}\n      style={visibleTab === item.id ? {} : { display: \"none\" }}\n    >\n      <img src={item.image} alt={item.title} />\n      {item.id === 3 ? (\n        <img className=\"geo-img\" src={item.geologyDetail} alt={item.title} />\n      ) : (\n        \"\"\n      )}\n    </div>\n  ));\n\n  return (\n    <div className=\"Tabs\">\n      <div className=\"tab-image\">{imgContent}</div>\n      <div className=\"tab-content\">\n        <h1>{props.name}</h1>\n        {listContent}\n      </div>\n      <ul className=\"tab-titles\">{listTitles}</ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import { useParams } from \"react-router-dom\";\nimport Tabs from \"../Tabs/Tabs\";\nimport \"./Planet.css\";\n\nconst Planet = ({ datas }) => {\n  let { name } = useParams();\n  const planet = datas.find((data) => data.name === name);\n  const additonalInformations = [\n    {\n      id: 1,\n      title: \"Overview\",\n      subtitle: \"\",\n      content: planet.overview.content,\n      source: planet.overview.source,\n      image: planet.images.planet,\n    },\n    {\n      id: 2,\n      title: \"Internal\",\n      subtitle: \"Structure\",\n      content: planet.structure.content,\n      source: planet.structure.source,\n      image: planet.images.internal,\n    },\n    {\n      id: 3,\n      title: \"Surface\",\n      subtitle: \"Geology\",\n      content: planet.geology.content,\n      source: planet.geology.source,\n      image: planet.images.planet,\n      geologyDetail: planet.images.geology,\n    },\n  ];\n\n  return (\n    <div className=\"Planet\">\n      {planet ? (\n        <div className=\"Planet\">\n          <Tabs\n            data={additonalInformations}\n            name={planet.name}\n            color={planet.color}\n          />\n          <ul className=\"extra-information\">\n            <li>\n              <h4>Rotation time</h4>\n              <h2>{planet.rotation}</h2>\n            </li>\n            <li>\n              <h4>Revolution time</h4>\n              <h2>{planet.revolution}</h2>\n            </li>\n            <li>\n              <h4>Radius</h4>\n              <h2>{planet.radius}</h2>\n            </li>\n            <li>\n              <h4>Average temp.</h4>\n              <h2>{planet.temperature}</h2>\n            </li>\n          </ul>\n        </div>\n      ) : (\n        <p>{name} is not a planet</p>\n      )}\n    </div>\n  );\n};\n\nexport default Planet;\n","import Tabs from \"../Tabs/Tabs\";\n\nconst Homepage = (props) => {\n  const planet = props.datas;\n\n  const additonalInformations = [\n    {\n      id: 1,\n      title: \"Overview\",\n      subtitle: \"\",\n      content: planet.overview.content,\n      source: planet.overview.source,\n      image: planet.images.planet,\n    },\n    {\n      id: 2,\n      title: \"Internal\",\n      subtitle: \"Structure\",\n      content: planet.structure.content,\n      source: planet.structure.source,\n      image: planet.images.internal,\n    },\n    {\n      id: 3,\n      title: \"Surface\",\n      subtitle: \"Geology\",\n      content: planet.geology.content,\n      source: planet.geology.source,\n      image: planet.images.planet,\n      geologyDetail: planet.images.geology,\n    },\n  ];\n  return (\n    <div className=\"Planet\">\n      <div className=\"Planet\">\n        <Tabs data={additonalInformations} name=\"Earth\" color=\"#6D2ED5\" />\n        <ul className=\"extra-information\">\n          <li>\n            <h4>Rotation time</h4>\n            <h2>{planet.rotation}</h2>\n          </li>\n          <li>\n            <h4>Revolution time</h4>\n            <h2>{planet.revolution}</h2>\n          </li>\n          <li>\n            <h4>Radius</h4>\n            <h2>{planet.radius}</h2>\n          </li>\n          <li>\n            <h4>Average temp.</h4>\n            <h2>{planet.temperature}</h2>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport datas from \"./data.json\";\nimport Menu from \"./component/Menu/Menu\";\nimport Planet from \"./component/Planet/Planet\";\nimport Homepage from \"./component/Homepage/Homepage\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Menu datas={datas} />\n        <Switch>\n          <Route path=\"/planets-fact-site/:name\">\n            <Planet datas={datas} />\n          </Route>\n          <Route path=\"/\">\n            <Homepage datas={datas[2]} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}